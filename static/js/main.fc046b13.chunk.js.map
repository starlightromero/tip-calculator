{"version":3,"sources":["components/CalculationForm/CalculationForm.module.css","components/NumberInput/NumberInput.module.css","components/CalculationForm/CalculationForm.js","components/NumberInput/NumberInput.js","components/Result/Result.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","CalculationForm","props","className","classes","title","children","NumberInput","value","setValue","recalculate","useEffect","htmlFor","name","type","id","min","onChange","event","target","Result","tipAmount","toFixed","totalBill","personAmount","App","useState","bill","setBill","tipPercentage","setTipPercentage","billSplit","setBillSplit","setTipAmount","setTotalBill","setPersonAmount","calculateTipAmount","useCallback","calculateTotalBill","calculatePersonAmount","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,gBAAkB,2C,gBCApCD,EAAOC,QAAU,CAAC,YAAc,mC,+JCWjBC,EATS,SAAAC,GACtB,OACE,uBAAMC,UAAWC,IAAQH,gBAAzB,UACE,6BAAKC,EAAMG,QACVH,EAAMI,a,gBCgBEC,EApBK,SAAAL,GAAU,IACpBM,EAAiCN,EAAjCM,MAAOC,EAA0BP,EAA1BO,SAAUC,EAAgBR,EAAhBQ,YAMzB,OAJAC,qBAAU,WACRD,MACC,CAACA,EAAaF,IAGf,sBAAKL,UAAWC,IAAQG,YAAxB,UACE,uBAAOK,QAASV,EAAMW,KAAtB,SAA6BX,EAAMW,OACnC,uBACEC,KAAK,SACLC,GAAIb,EAAMW,KACVG,IAAI,IACJR,MAAOA,EACPS,SAAU,SAAAC,GAAK,OAAIT,EAASS,EAAMC,OAAOX,cCNlCY,EAVA,SAAAlB,GACb,OACE,gCACE,8CAAiBA,EAAMmB,UAAUC,QAAQ,MACzC,8CAAiBpB,EAAMqB,UAAUD,QAAQ,MACzC,qDAAwBpB,EAAMsB,aAAaF,QAAQ,UCoD1CG,EArDH,SAAAvB,GAAU,IAAD,EACOwB,mBAAS,IADhB,mBACXC,EADW,KACLC,EADK,OAEyBF,mBAAS,IAFlC,mBAEXG,EAFW,KAEIC,EAFJ,OAGiBJ,mBAAS,IAH1B,mBAGXK,EAHW,KAGAC,EAHA,OAIiBN,mBAAS,GAJ1B,mBAIXL,EAJW,KAIAY,EAJA,OAKiBP,mBAAS,GAL1B,mBAKXH,EALW,KAKAW,EALA,OAMuBR,mBAAS,GANhC,mBAMXF,EANW,KAMGW,EANH,KAQbC,EAAqBC,uBAAY,WACrCJ,GAAcN,GAAQE,EAAgB,OACrC,CAACF,EAAME,IAEJS,EAAqBD,uBAAY,WACrCH,GAAcP,EAAON,KACpB,CAACM,EAAMN,IAEJkB,EAAwBF,uBAAY,WAC5BF,EAAZJ,EAA4BR,GAAaQ,EAA6B,KACrE,CAACR,EAAWQ,IAETrB,EAAc2B,uBAAY,WAC9BD,IACAE,IACAC,MACC,CAACH,EAAoBE,EAAoBC,IAE5C,OACE,sBAAKpC,UAAU,MAAf,UACE,eAAC,EAAD,CAAiBE,MAAM,kBAAvB,UACE,cAAC,EAAD,CACEQ,KAAK,OACLL,MAAOmB,EACPlB,SAAUmB,EACVlB,YAAaA,IACf,cAAC,EAAD,CACEG,KAAK,QACLL,MAAOqB,EACPpB,SAAUqB,EACVpB,YAAaA,IACf,cAAC,EAAD,CACEG,KAAK,QACLL,MAAOuB,EACPtB,SAAUuB,EACVtB,YAAaA,OAEjB,cAAC,EAAD,CACEW,UAAWA,EACXE,UAAWA,EACXC,aAAcA,QC1CPgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fc046b13.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CalculationForm\":\"CalculationForm_CalculationForm__2bKk3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NumberInput\":\"NumberInput_NumberInput__MU2HV\"};","import React from 'react'\nimport classes from './CalculationForm.module.css'\n\nconst CalculationForm = props => {\n  return (\n    <form className={classes.CalculationForm}>\n      <h1>{props.title}</h1>\n      {props.children}\n    </form>\n  )\n}\n\nexport default CalculationForm\n","import React, { useEffect } from 'react'\nimport classes from './NumberInput.module.css'\n\nconst NumberInput = props => {\n  const { value, setValue, recalculate } = props\n\n  useEffect(() => {\n    recalculate()\n  }, [recalculate, value])\n\n  return (\n    <div className={classes.NumberInput}>\n      <label htmlFor={props.name}>{props.name}</label>\n      <input\n        type='number'\n        id={props.name}\n        min='0'\n        value={value}\n        onChange={event => setValue(event.target.value)} />\n    </div>\n  )\n}\n\nexport default NumberInput\n","import React from 'react'\n\nconst Result = props => {\n  return (\n    <div>\n      <p>Tip Amount: ${props.tipAmount.toFixed(2)}</p>\n      <p>Total Bill: ${props.totalBill.toFixed(2)}</p>\n      <p>Amount per person: ${props.personAmount.toFixed(2)}</p>\n    </div>\n  )\n}\n\nexport default Result\n","import React, { useState, useCallback } from 'react'\nimport './App.css'\nimport CalculationForm from './components/CalculationForm/CalculationForm'\nimport NumberInput from './components/NumberInput/NumberInput'\nimport Result from './components/Result/Result'\n\nconst App = props => {\n  const [ bill, setBill ] = useState('')\n  const [ tipPercentage, setTipPercentage ] = useState('')\n  const [ billSplit, setBillSplit ] = useState('')\n  const [ tipAmount, setTipAmount ] = useState(0)\n  const [ totalBill, setTotalBill ] = useState(0)\n  const [ personAmount, setPersonAmount ] = useState(0)\n\n  const calculateTipAmount = useCallback(() => {\n    setTipAmount(+bill * +tipPercentage / 100)\n  }, [bill, tipPercentage])\n\n  const calculateTotalBill = useCallback(() => {\n    setTotalBill(+bill + tipAmount)\n  }, [bill, tipAmount])\n\n  const calculatePersonAmount = useCallback(() => {\n    billSplit ? setPersonAmount(totalBill / +billSplit) : setPersonAmount(0)\n  }, [totalBill, billSplit])\n\n  const recalculate = useCallback(() => {\n    calculateTipAmount()\n    calculateTotalBill()\n    calculatePersonAmount()\n  }, [calculateTipAmount, calculateTotalBill, calculatePersonAmount])\n\n  return (\n    <div className='App'>\n      <CalculationForm title='Calculate Tips!'>\n        <NumberInput\n          name='Bill'\n          value={bill}\n          setValue={setBill}\n          recalculate={recalculate} />\n        <NumberInput\n          name='Tip %'\n          value={tipPercentage}\n          setValue={setTipPercentage}\n          recalculate={recalculate} />\n        <NumberInput\n          name='Split'\n          value={billSplit}\n          setValue={setBillSplit}\n          recalculate={recalculate} />\n      </CalculationForm>\n      <Result\n        tipAmount={tipAmount}\n        totalBill={totalBill}\n        personAmount={personAmount} />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}